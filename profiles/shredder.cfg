[buildout]
parts += shredder

[shredder]
recipe = collective.recipe.template
inline =
    #!${buildout:bin-directory}/python
    from couchdb import Server
    from couchdb.design import ViewDefinition
    from openprocurement.api.models import get_now
    from datetime import timedelta
    aserver = Server('http://${couchdb.ini:username}:${couchdb.ini:password}@${couchdb.ini:host}:${couchdb.ini:port}/')
    adb = aserver['${openprocurement.api.ini:couchdb_db}']
    server = Server('${openprocurement.api.ini:couchdb_url}')
    db = server['${openprocurement.api.ini:couchdb_db}']
    shredder_view = ViewDefinition('shredder', 'tenders', "function(doc){if(doc.doc_type=='Tender' && doc.status=='draft'){emit(doc.dateModified, doc._rev)}}")
    ViewDefinition.sync_many(adb, [shredder_view])
    date = (get_now() - timedelta(7)).isoformat()
    tenders = []
    for i in shredder_view(db, endkey=date):
        tenders.append({'_id': i.id, '_rev': i.value, '_deleted': True})
    print db.update(tenders)
output = ${buildout:bin-directory}/${:_buildout_section_name_}
mode = 755
